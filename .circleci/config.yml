version: 2.1

executors:
  android-executor:
    docker:
      - image: ubuntu:20.04
    working_directory: ~/project

jobs:
  build:
    executor: android-executor
    steps:
      - checkout
      - run:
          name: Install Required Tools
          command: |
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -y
            apt-get install -y wget unzip openjdk-17-jdk
      - run:
          name: Install Android SDK
          command: |
            wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O cmdline-tools.zip
            unzip cmdline-tools.zip
            mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
            mv cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
            echo "export ANDROID_SDK_ROOT=/usr/local/android-sdk" >> $BASH_ENV
            echo "export PATH=$PATH:/usr/local/android-sdk/cmdline-tools/latest/bin" >> $BASH_ENV
            source $BASH_ENV
            yes | sdkmanager --licenses
            sdkmanager "platforms;android-30" "build-tools;30.0.3" "platform-tools"
            sdkmanager --list
      - run:
          name: Verify SDK Installation
          command: |
            echo "Checking SDK installation"
            sdkmanager --list
      - run:
          name: Setup Gradle Wrapper
          command: ./gradlew wrapper --gradle-version 8.9
      - run:
          name: Build APK
          command: ./gradlew assembleDebug
      - run:
          name: Run Tests
          command: ./gradlew testDebugUnitTest
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-cache-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
          destination: apk
      - store_test_results:
          path: app/build/test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
